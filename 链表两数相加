给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。

如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。

您可以假设除了数字 0 之外，这两个数都不会以 0 开头。

示例：

输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)
输出：7 -> 0 -> 8
原因：342 + 465 = 807

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */

class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        boolean flag = false;
		    return add(l1,l2,flag);
    }
    public ListNode add(ListNode l1, ListNode l2,boolean flag) {
		int a = 0;
		int b = l1 != null ? l1.val : 0;
		int c = l2 != null ? l2.val : 0;
		
		if(flag) {
			a = b+c+1;
		}else {
			a = b+c;
		}
		if(a>9) {
			a = a-10;
			flag = true;
		}else {
			flag = false;
		}
		ListNode l3 = new ListNode(a);
		ListNode a1 = null;
		ListNode a2 = null;
		if(l1 !=null) {
			a1 = l1.next != null ? l1.next : null;
		}
		if(l2 !=null) {
			a2 = l2.next != null ? l2.next : null;
		}
		if(a1 == null && a2 == null && flag) {
			l3.next = new ListNode(1);
			return l3;
		}
		if(a1 ==null && a2 ==null && !flag) {
			return l3;
		}
		l3.next = add(a1,a2,flag);
		return l3;
	}
}

