/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
            	List<ListNode> list = new ArrayList<>();
    	while(l1 != null) {
    		list.add(l1);
    		l1 = l1.next;
    	}
    	while(l2 != null) {
    		list.add(l2);
    		l2 = l2.next;
    	}
    	if(list != null && list.size() !=0) {
    		
    	}
		Collections.sort(list, new Comparator<ListNode>() {
			@Override
			public int compare(ListNode l1, ListNode l2) {
				if (l1.val>l2.val) {
					return 1;
				} else if (l1.val<l2.val) {
					return -1;
				} else {
					return 0;
				}
			}
		});
		ListNode head = new ListNode(0);
		ListNode l3 = head;
		for(ListNode item:list) {
			l3.next = item;
			l3 = l3.next;
		}
        return head.next;
    }
}
